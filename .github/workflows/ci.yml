name: Build Go

on:
  push:
    branches: [ main ]
  pull_request:

env:
  GO_VERSION: 1.15
  BUMP_MAJOR: bump-major
  BUMP_MINOR: bump-minor
  ENABLE_COMPRESSION: false
  SRC_DIR: src
  BINARY_OUTDIR: bin

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: FranzDiebold/github-env-vars-action@v2.1.0

    - name: Override ENV
      uses: c-py/action-dotenv-to-setenv@v3
      continue-on-error: true

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      shell: pwsh
      run: ./build-all.ps1

    #- name: Build with xgo
    #  uses: crazy-max/ghaction-xgo@v1.5.0
    #  with:
    #    xgo_version: latest
    #    go_version: ${{ env.GO_VERSION }}.x
    #    dest: ${{ env.BINARY_OUTDIR }}
    #    prefix: ${{ env.CI_REPOSITORY_NAME_SLUG }}
    #    targets: ${{ env.BUILD_ARCH }}
    #    ldflags: -s -w

    - name: Upload Artifact(s)
      if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.CI_REPOSITORY_NAME_SLUG }}
        path: ${{ env.BINARY_OUTDIR }}/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: FranzDiebold/github-env-vars-action@v2.1.0
    
    - name: Override ENV
      uses: c-py/action-dotenv-to-setenv@v3
      continue-on-error: true

    - name: Download Artifact(s)
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.CI_REPOSITORY_NAME_SLUG }}
        path: ${{ env.BINARY_OUTDIR }}

    - name: Get Previous Tag
      id: previous-tag
      uses: WyriHaximus/github-action-get-previous-tag@1.0.0
      continue-on-error: true

    - name: Catch Tag
      id: catch-tag
      shell: pwsh
      run: |
        if ([string]::IsNullOrWhiteSpace($env:VERSION)) {
          Write-Host "Unable to find existing tags: Setting initial to [v0.0.0]"
          return "::set-output name=tag::v0.0.0"
        } else {
          Write-Host "Existing tag found: using [${env:VERSION}]"
          return "::set-output name=tag::${env:VERSION}"
        }
      env:
        VERSION: ${{ steps.previous-tag.outputs.tag }}

    - name: Next SemVer
      id: next-ver
      uses: WyriHaximus/github-action-next-semvers@v1.0
      with:
        version: ${{ steps.catch-tag.outputs.tag }}

    - name: Set User Configuration
      uses: oleksiyrudenko/gha-git-credentials@v2
      with:
        name: 'GitHub Actions'
        email: 'github-bot@github.com'
        actor: 'GitHub Actions'
        token: '${{ secrets.GITHUB_TOKEN }}'

    - name: Select SemVer
      id: select-ver
      shell: pwsh
      run: |
        if ($env:IS_MAJOR -eq $true) {
          Write-Host "Bump MAJOR octet: [${env:V_MAJOR}]"
          $output = $env:V_MAJOR
        } elseif ($env:IS_MINOR -eq $true) {
          Write-Host "Bump MINOR octet: [${env:V_MINOR}]"
          $output = $env:V_MINOR
        } else {
          Write-Host "Bump PATCH octet: [${env:V_PATCH}]"
          $output = $env:V_PATCH
        }
        git tag -a $output -m $env:SHA | Out-Null
        return "::set-output name=tag::${output}"
      env:
        IS_MAJOR: ${{ contains(toJson(github.event.commits), env.BUMP_MAJOR) }}
        IS_MINOR: ${{ contains(toJson(github.event.commits), env.BUMP_MINOR) }}
        V_MAJOR: ${{ steps.next-ver.outputs.v_major }}
        V_MINOR: ${{ steps.next-ver.outputs.v_minor }}
        V_PATCH: ${{ steps.next-ver.outputs.v_patch }}
        SHA: ${{ github.sha }}

    - name: UPX Compression
      if: ${{ env.ENABLE_COMPRESSION == 'true' }}
      uses: gacts/upx@v1.0.1
      with:
        dir: ./${{ env.BINARY_OUTDIR }}/
        upx_args: -8

    - name: Create PreRelease
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{ env.BINARY_OUTDIR }}/*
        name: ${{ env.CI_REPOSITORY_NAME_SLUG }}-${{ steps.select-ver.outputs.tag }}-rc
        commit: ${{ github.sha }}
        tag: ${{ steps.select-ver.outputs.tag }}
        token: ${{ secrets.ONYXHAT_PAT }}
        prerelease: true
